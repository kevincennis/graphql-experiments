# import Address from 'address.graphql'
# import * from 'scalars.graphql'
# import * from 'directives.graphql'

"""
A user record
"""
type User {
  "Primary key"
  _id: ObjectId!,

  "Full name"
  name: String @hasRoles( roles: [ "users:read_name" ] ),

  "Email address"
  email: Email,

  "Example of a deprecated field"
  whatever: String @deprecated( reason: "You sux" ),

  "Address foreign key"
  address_id: ObjectId,

  "Address"
  address: Address,

  "Record creation date"
  created: Date,

  "Record last updated date"
  updated: Date
}

input CreateUserInput {
  "Full name"
  name: String!,

  "Email address"
  email: Email!,

  "Address foreign key"
  address_id: ObjectId!
}

input UpdateUserInput {
  "Full name"
  name: String,

  "Email address"
  email: Email,

  "Address foreign key"
  address_id: ObjectId
}

type Query {
  "Find users"
  getUsers(
    "Pagination offset"
    skip: Int,

    "Pagination limit"
    limit: Int
  ): [ User ] @hasRoles( roles: [ "users:list" ] ),

  "Find a user by _id"
  getUser(
    "Primary key"
    _id: ObjectId!
  ): User @hasRoles( roles: [ "users:show" ] )
}

type Mutation {
  "Create a user"
  createUser(
    "User fields"
    fields: CreateUserInput!
  ): User @hasRoles( roles: [ "users:create" ] ),

  "Update a user"
  updateUser(
    "Primary key"
    _id: ObjectId!,

    "User fields"
    fields: UpdateUserInput!
  ): User @hasRoles( roles: [ "users:update" ] )
}
